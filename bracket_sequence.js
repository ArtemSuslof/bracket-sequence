let p1 = '()'; //true 
let p2 = '(]'; // false
let p3 = '([})'; // false
let p4 = '{[]}'; // true

function isValid(s) {
  const brackets = {  //brakets содержит соответсвия между открывающими и закрывающими скобками
    ")": "(",
    "]": "[",
    "}": "{"
  };

  const st = []; //Создаём пустой стек st, который будет использоваться для отслеживания открытых скобок.
  for (let i = 0; i < s.length; i++) {   // проходим по каждому символу в строке
    if (isClosedBracket(s[i])) {  // если символ - закрывающаяся скобка, то проверяем на соответсвие с открывающейся скобкой
      if (brackets[s[i]] !== st.pop()) return false; // Вернет false если скобки не соответсвуют друг другу 
    } else {
      st.push(s[i]); // Если символ не является закрывающей скобкой, он добавляется в конец масиива
    }
  }
  return st.length === 0; // Проверяем пуст ли стек, Если остались элементы значит остались непарные открывающие скобки и вернётся false, иначе вернется true
}

function isClosedBracket(ch) { //проверка, является ли переданный символ закрывающей скобкой
  return [")", "]", "}"].indexOf(ch) > -1;
}

console.log(p1, isValid(p1));
console.log(p2, isValid(p2));
console.log(p3, isValid(p3));
console.log(p4, isValid(p4));